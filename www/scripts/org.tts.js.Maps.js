(function (factory) {
	if (typeof define === 'function' && define.amd) {
		define(factory)
	} else if (typeof module === 'object' && module.exports) {
		module.exports = factory()
	} else {
		(typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : this)['Maps'] = factory()
	}
}(function () {

	/* GlobalMercator */
	let GlobalMercator=new(function(){const t=Math.PI/360,i=Math.PI/180,e=Math.PI/2,s=(Math.PI,2*Math.PI),r=(Math.PI,180/Math.PI);return class{constructor(){this.tileSize=256,this.initialResolution=6378137*s/this.tileSize,this.originShift=6378137*s/2}LatLonToMeters(e,s){let r=s*this.originShift/180,h=Math.log(Math.tan((90+e)*t))/i;return{mx:r,my:h=h*this.originShift/180}}MetersToLatLon(t,s){let h=t/this.originShift*180,o=s/this.originShift*180;return{lat:o=r*(2*Math.atan(Math.exp(o*i))-e),lon:h}}MetersToPixels(t,i,e){var s=this.Resolution(e);return{px:(t+this.originShift)/s,py:(i+this.originShift)/s}}Resolution(t){return this.initialResolution/Math.pow(2,t)}TileBounds(t,i,e){let s,r,h,o;return{minx:s=this.PixelsToMeters(t*this.tileSize,i*this.tileSize,e).mx,miny:r=this.PixelsToMeters(t*this.tileSize,i*this.tileSize,e).my,maxx:h=this.PixelsToMeters((t+1)*this.tileSize,(i+1)*this.tileSize,e).mx,maxy:o=this.PixelsToMeters((t+1)*this.tileSize,(i+1)*this.tileSize,e).my}}PixelsToMeters(t,i,e){var s;return{mx:t*(s=this.Resolution(e))-this.originShift,my:i*s-this.originShift}}PixelsToTile(t,i){return{tx:Math.round(Math.ceil(t/this.tileSize)-1),ty:Math.round(Math.ceil(i/this.tileSize)-1)}}PixelsToRaster(t,i,e){return{x:t,y:(this.tileSize<<e)-i}}LatLonToTile(t,i,e){var s=this.LatLonToMeters(t,i),r=this.MetersToPixels(s.mx,s.my,e);return this.PixelsToTile(r.px,r.py)}MetersToTile(t,i,e){var s=this.MetersToPixels(t,i,e);return this.PixelsToTile(s.px,s.py)}GoogleTile(t,i,e){return{tx:t,ty:Math.pow(2,e)-1-i}}QuadKey(t,i,e){let s='';i=2**e-1-i;for(let r=e;r>0;r--){let e=0,h=1<<r-1;0!=(t&h)&&(e+=1),0!=(i&h)&&(e+=2),s+=e.toString()}return s}QuadKeyToTile(t){let i=0,e=0,s=t.length;for(let r=0;r<s;r++){let h=s-r,o=1<<h-1;'1'===t[s-h]&&(i|=o),'2'==t[s-h]&&(e|=o),'3'==t[s-h]&&(i|=o,e|=o)}return{tx:i,ty:e=2**s-1-e,zoom:s}}}}());
	/* Point */
	function Point(e,t,r=0){let n=[e,t,r];return Object.defineProperty(n,'x',{get:()=>n[0],enumerable:!0}),Object.defineProperty(n,'y',{get:()=>n[1],enumerable:!0}),Object.defineProperty(n,'z',{get:()=>n[2],enumerable:!0}),Object.defineProperty(n,'ToCoordinate',{enumerable:!0,value:function(){let e=GlobalMercator.MetersToLatLon(this.x,this.y);return new Coordinate(e.lon,e.lat,this.z)}}),n}
	/* Coordinate */
	function Coordinate(e,t,n=0){let r=[e,t,n];return Object.defineProperty(r,'lon',{get:()=>r[0],enumerable:!0}),Object.defineProperty(r,'lat',{get:()=>r[1],enumerable:!0}),Object.defineProperty(r,'ele',{get:()=>r[2],enumerable:!0}),Object.defineProperty(r,'ToPoint',{enumerable:!0,value:function(){let e=GlobalMercator.LatLonToMeters(this.lat,this.lon);return new Point(e.mx,e.my,this.ele)}}),r}Object.defineProperty(Coordinate,'LonLat',{enumerable:!0,value:Coordinate}),Object.defineProperty(Coordinate,'LatLon',{enumerable:!0,value:(e,t,n)=>new Coordinate(t,e,n)});
	/* Range */
	function Range(e,t){let n=[e<t?e:t,e<t?t:e];return Object.defineProperty(n,'min',{enumerable:!0,get:()=>{}}),Object.defineProperty(n,'max',{enumerable:!0,get:()=>{}}),Object.defineProperty(n,'center',{enumerable:!0,get:()=>{}}),Object.defineProperty(n,'span',{enumerable:!0,get:()=>{}}),n}
	/* Bounds */
	let Bounds={Coordinate:function(e,n,t,r){let a=[e<t?e:t,n<r?n:r,t>e?t:e,r>n?r:n];return Object.defineProperty(a,'minlon',{enummerable:!0,get:()=>a[0]}),Object.defineProperty(a,'minlat',{enummerable:!0,get:()=>a[1]}),Object.defineProperty(a,'maxlon',{enummerable:!0,get:()=>a[2]}),Object.defineProperty(a,'maxlat',{enummerable:!0,get:()=>a[3]}),Object.defineProperty(a,'center',{enumerable:!0,get:()=>new Coordinate(a.minlon+(a.maxlon-a.minlon)/2,a.minlat+(a.maxlat-a.minlat)/2)}),Object.defineProperty(a,'min',{enumerable:!0,get:()=>new Coordinate(a.minlon,a.minlat)}),Object.defineProperty(a,'max',{enumerable:!0,get:()=>new Coordinate(a.maxlon,a.maxlat)}),Object.defineProperty(a,'lon',{enumerable:!0,get:()=>new Range(a.minlon,a.maxlon)}),Object.defineProperty(a,'lat',{enumerable:!0,get:()=>new Range(a.minlat,a.maxlat)}),Object.defineProperty(a,'position',{enumerable:!0,value:function(e){if(Array.isArray(e)&&Array.isArray(e[0])){let n=[];return e.forEach(e=>{n.push(a.position(e))}),n}return Reflect.has(e,'lon')&&Reflect.has(e,'lat')?[(e.lon-a.minlon)/(a.maxlon-a.minlon),(e.lat-a.minlat)/(a.maxlat-a.minlat)]:Array.isArray(e)?[(e[0]-a.minlon)/(a.maxlon-a.minlon),(e[1]-a.minlat)/(a.maxlat-a.minlat)]:void 0}}),a},Point:function(e,n,t,r){let a=[e<t?e:t,n<r?n:r,t>e?t:e,r>n?r:n];return Object.defineProperty(a,'minx',{enummerable:!0,get:()=>a[0]}),Object.defineProperty(a,'miny',{enummerable:!0,get:()=>a[1]}),Object.defineProperty(a,'maxx',{enummerable:!0,get:()=>a[2]}),Object.defineProperty(a,'maxy',{enummerable:!0,get:()=>a[3]}),Object.defineProperty(a,'center',{enumerable:!0,get:()=>new Coordinate(a.minx+(a.maxx-a.minx)/2,a.miny+(a.maxy-a.miny)/2)}),Object.defineProperty(a,'min',{enumerable:!0,get:()=>new Point(a.minx,a.miny)}),Object.defineProperty(a,'max',{enumerable:!0,get:()=>new Point(a.maxx,a.maxy)}),Object.defineProperty(a,'x',{enumerable:!0,get:()=>new Range(a.minx,a.maxy)}),Object.defineProperty(a,'y',{enumerable:!0,get:()=>new Range(a.miny,a.maxy)}),Object.defineProperty(a,'position',{enumerable:!0,value:function(e){if(Array.isArray(e)&&Array.isArray(e[0])){let n=[];return e.forEach(e=>{n.push(a.position(e))}),n}return Reflect.has(e,'c')&&Reflect.has(e,'y')?[(e.x-a.minx)/(a.maxx-a.minx),(e.y-a.miny)/(a.maxy-a.miny)]:Array.isArray(e)?[(e[0]-a.minx)/(a.maxx-a.minx),(e[1]-a.miny)/(a.maxy-a.miny)]:void 0}}),a}};
	/* Tile */
	let TileSizes=[40075017,20037508,10018754,5009377.1,2504688.5,1252344.3,626172.1,313086.1,156543,78271.5,39135.8,19567.9,9783.94,4891.97,2445.98,1222.99,611.496,305.748,152.874,76.437,38.2185,19.10926,9.55463,4.777315,2.3886575];function lon2tile(t,e){return Math.floor((t+180)/360*Math.pow(2,e))}function lat2tile(t,e){return Math.floor((1-Math.log(Math.tan(t*Math.PI/180)+1/Math.cos(t*Math.PI/180))/Math.PI)/2*Math.pow(2,e))}function tile2lon(t,e){return t/Math.pow(2,e)*360-180}function tile2lat(t,e){var o=Math.PI-2*Math.PI*t/Math.pow(2,e);return 180/Math.PI*Math.atan(.5*(Math.exp(o)-Math.exp(-o)))}function SlippyToQuadKey(t,e,o){return GlobalMercator.QuadKey(e,Math.pow(2,t)-o-1,t)}function QuadKeyToSlippy(t){let e=GlobalMercator.QuadKeyToTile(t),o=GlobalMercator.TileBounds(e.tx,e.ty,e.zoom),l=GlobalMercator.MetersToLatLon(o.minx,o.miny),a=GlobalMercator.MetersToLatLon(o.maxx,o.maxy),r=[l.lon,l.lat,a.lon,a.lat],n=[(r[2]-r[0])/2+r[0],(r[3]-r[1])/2+r[1]];return[e.zoom,lon2tile(n[0],e.zoom),lat2tile(n[1],e.zoom)]}function Tile(){let t=null;1==arguments.length&&(t=GlobalMercator.QuadKeyToTile(arguments[0])),2==arguments.length&&(Reflect.has(arguments[0],'lon')&&Reflect.has(arguments[0],'lat')?t=GlobalMercator.LatLonToTile(arguments[0].lat,arguments[0].lon,arguments[1]):Array.isArray(arguments[0])&&(t=GlobalMercator.LatLonToTile(arguments[0][1],arguments[0][0],arguments[1])),t.zoom=arguments[1]),3==arguments.length&&(t=GlobalMercator.QuadKeyToTile(SlippyToQuadKey.apply(null,arguments))),this.x=t.tx,this.y=t.ty,this.zoom=t.zoom,this.key=GlobalMercator.QuadKey(this.x,this.y,this.zoom),this.slippy=QuadKeyToSlippy(this.key);let e=GlobalMercator.TileBounds(this.x,this.y,this.zoom),o=GlobalMercator.MetersToLatLon(e.minx,e.miny),l=GlobalMercator.MetersToLatLon(e.maxx,e.maxy);return this.bounds=Bounds.Coordinate(o.lon,o.lat,l.lon,l.lat),Object.defineProperty(this,'subTiles',{enumerable:!0,get:function(t=20){let e=[],o=l=>{l.length>t-1?(e.push(l+'0'),e.push(l+'1'),e.push(l+'2'),e.push(l+'3')):(o(l+'0'),o(l+'1'),o(l+'2'),o(l+'3'))};return o(this.key),e}}),this}Object.defineProperty(Tile,'Sizes',{enumerable:!0,value:TileSizes}),Object.defineProperty(Tile,'TileFromBounds',{enumerable:!0,value:function(t,e=20,o=0){let l=[[t[0],t[1]],[t[0],t[3]],[t[2],t[3]],[t[2],t[1]]],a=null,r=e;for(;r>=o&&null==a;){let t=[...new Set(l.map(t=>{let e=GlobalMercator.LatLonToTile(t[1],t[0],r);return GlobalMercator.QuadKey(e.tx,e.ty,r)}))];1==t.length?a=t[0]:r--}return a}});

	return {
		Bounds: Bounds,
		Coordinate: Coordinate,
		GlobalMercator: GlobalMercator,
		Point: Point,
		Range: Range,
		Tile: Tile
	}
}))
